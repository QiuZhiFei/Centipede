QLPreviewController : UIViewController, QLPreviewControllerDelegate, QLPreviewControllerDataSource

DELEGATE_LIST:delegate, dataSource



    
    /*!
     * @abstract Returns the number of items that the preview controller should preview.
     * @param controller The Preview Controller.
     * @result The number of items.
     */
    func numberOfPreviewItemsInPreviewController(controller: QLPreviewController!) -> Int
    
    /*!
     * @abstract Returns the item that the preview controller should preview.
     * @param panel The Preview Controller.
     * @param index The index of the item to preview.
     * @result An item conforming to the QLPreviewItem protocol.
     */
    func previewController(controller: QLPreviewController!, previewItemAtIndex index: Int) -> QLPreviewItem!





    /*!
     * @abstract Invoked before the preview controller is closed.
     */
    optional func previewControllerWillDismiss(controller: QLPreviewController!)
    
    /*!
     * @abstract Invoked after the preview controller is closed.
     */
    optional func previewControllerDidDismiss(controller: QLPreviewController!)
    
    /*!
     * @abstract Invoked by the preview controller before trying to open an URL tapped in the preview.
     * @result Returns NO to prevent the preview controller from calling -[UIApplication openURL:] on url.
     * @discussion If not implemented, defaults is YES.
     */
    optional func previewController(controller: QLPreviewController!, shouldOpenURL url: NSURL!, forPreviewItem item: QLPreviewItem!) -> Bool
    
    /*!
     * @abstract Invoked when the preview controller is about to be presented full screen or dismissed from full screen, to provide a zoom effect.
     * @discussion Return the origin of the zoom. It should be relative to view, or screen based if view is not set. The controller will fade in/out if the rect is CGRectZero.
     */
    optional func previewController(controller: QLPreviewController!, frameForPreviewItem item: QLPreviewItem!, inSourceView view: AutoreleasingUnsafeMutablePointer<UIView?>) -> CGRect
    
    /*!
     * @abstract Invoked when the preview controller is about to be presented full screen or dismissed from full screen, to provide a smooth transition when zooming.
     * @param contentRect The rect within the image that actually represents the content of the document. For example, for icons the actual rect is generally smaller than the icon itself.
     * @discussion Return an image the controller will crossfade with when zooming. You can specify the actual "document" content rect in the image in contentRect.
     */
    optional func previewController(controller: QLPreviewController!, transitionImageForPreviewItem item: QLPreviewItem!, contentRect: UnsafeMutablePointer<CGRect>) -> UIImage!