MCSession : NSObject, MCSessionDelegate

    // Remote peer changed state.
    @available(iOS 7.0, *)
    public func session(_ session: MCSession, peer peerID: MCPeerID, didChange state: MCSessionState)

    
    // Received data from remote peer.
    @available(iOS 7.0, *)
    public func session(_ session: MCSession, didReceive data: Data, fromPeer peerID: MCPeerID)

    
    // Received a byte stream from remote peer.
    @available(iOS 7.0, *)
    public func session(_ session: MCSession, didReceive stream: InputStream, withName streamName: String, fromPeer peerID: MCPeerID)

    
    // Start receiving a resource from remote peer.
    @available(iOS 7.0, *)
    public func session(_ session: MCSession, didStartReceivingResourceWithName resourceName: String, fromPeer peerID: MCPeerID, with progress: Progress)

    
    // Finished receiving a resource from remote peer and saved the content
    // in a temporary location - the app is responsible for moving the file
    // to a permanent location within its sandbox.
    @available(iOS 7.0, *)
    public func session(_ session: MCSession, didFinishReceivingResourceWithName resourceName: String, fromPeer peerID: MCPeerID, at localURL: URL, withError error: Error?)

    
    // Made first contact with peer and have identity information about the
    // remote peer (certificate may be nil).
    @available(iOS 7.0, *)
    optional public func session(_ session: MCSession, didReceiveCertificate certificate: [Any]?, fromPeer peerID: MCPeerID, certificateHandler: (Bool) -> Void)